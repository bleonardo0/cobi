/**
 * Script de test et debug pour le syst√®me de restaurants
 * Permet de v√©rifier l'API, la base de donn√©es et l'affichage des restaurants
 */

async function testRestaurantAPI() {
  console.log('üîç Test du syst√®me de restaurants');
  console.log('=====================================');

  try {
    // Test 1: V√©rifier l'API GET /api/admin/restaurants
    console.log('\n1. Test de l\'API GET /api/admin/restaurants');
    const response = await fetch('http://localhost:3000/api/admin/restaurants');
    
    if (!response.ok) {
      console.error('‚ùå Erreur API:', response.status, response.statusText);
      const errorText = await response.text();
      console.error('D√©tails:', errorText);
      return;
    }

    const data = await response.json();
    console.log('‚úÖ API r√©pond correctement');
    console.log('üìä Nombre de restaurants:', data.total);
    console.log('üìã Restaurants trouv√©s:');
    
    if (data.restaurants && data.restaurants.length > 0) {
      data.restaurants.forEach((restaurant, index) => {
        console.log(`\n   Restaurant ${index + 1}:`);
        console.log(`   - ID: ${restaurant.id}`);
        console.log(`   - Nom: ${restaurant.name}`);
        console.log(`   - Slug: ${restaurant.slug}`);
        console.log(`   - Adresse: ${restaurant.address}`);
        console.log(`   - Status: ${restaurant.subscriptionStatus}`);
        console.log(`   - Plan: ${restaurant.subscriptionPlan}`);
        console.log(`   - Cr√©√©: ${restaurant.createdAt}`);
        
        // V√©rifier les nouveaux champs propri√©taire
        if (restaurant.ownerName) {
          console.log(`   - Propri√©taire: ${restaurant.ownerName}`);
          console.log(`   - Contact: ${restaurant.ownerContact} (${restaurant.ownerContactMethod})`);
        }
      });
    } else {
      console.log('‚ö†Ô∏è Aucun restaurant trouv√© dans la base de donn√©es');
    }

    // Test 2: V√©rifier si les restaurants apparaissent dans l'interface
    console.log('\n2. Test de l\'interface frontend');
    console.log('Pour v√©rifier l\'interface:');
    console.log('- Ouvrir http://localhost:3000/admin/restaurants');
    console.log('- Regarder les logs de la console du navigateur');
    console.log('- Cliquer sur "Actualiser" pour forcer le reload');

    // Test 3: Suggestions de debug
    console.log('\n3. Suggestions de debug');
    console.log('- V√©rifier les logs dans la console du navigateur');
    console.log('- V√©rifier si les variables d\'environnement Supabase sont configur√©es');
    console.log('- V√©rifier si la migration SQL des colonnes owner a √©t√© ex√©cut√©e');
    console.log('- Tester avec un hard refresh (Ctrl+F5)');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

// Ex√©cuter le test
testRestaurantAPI(); 